# code to use the training functionality of Facemark Kazemi 
import cv2
import numpy as np
face_cascade = cv2.CascadeClassifier("../haarcascade_frontalface_alt2.xml")
# here we are simply using the landmarks generated by fitting from LBF
# these landmarks will be use as inputs to the training function

image_list = []
landmarks_list = []

f1 = cv2.face.createFacemarkLBF()
f1.loadModel("../lbfmodel.yaml")
img = cv2.imread("../Messi.jpg") 
image_list.append(img)
faces = face_cascade.detectMultiScale(img)
_,landmarks = f1.fit(img,faces)

landmarks_list.append(landmarks[0])

img = cv2.imread("../3Idiots.jpg")
image_list.append(img)
faces = face_cascade.detectMultiScale(img)
_,landmarks = f1.fit(img,faces)

landmarks_list.append(landmarks[0])

# setting the value of the scale
scale = np.array([460,460])
# creating Facemark Kazemi instace
fm = cv2.face.createFacemarkKazemi()

# calling the training function and storing the trained result in modelKazemi.dat file
fm.trainKazemi(image_list, landmarks_list, "configFile.xml", scale, "modelKazemi.dat")
