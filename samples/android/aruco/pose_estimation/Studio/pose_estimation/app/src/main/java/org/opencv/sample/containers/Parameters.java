package org.opencv.sample.containers;

import android.content.Context;
import android.content.SharedPreferences;

import org.opencv.sample.utilities.CONSTANTS;
import org.opencv.sample.utilities.DEFAULT_PARAMS;

/**
 * Created by Sarthak on 04/06/16.
 */

public class Parameters {
    SharedPreferences sharedpreferences;
    SharedPreferences.Editor editor;

    public static int NMARKERS;
    public static int ADAPTIVE_THRESH_WIN_SIZE_MIN;
    public static int ADAPTIVE_THRESH_WIN_SIZE_MAX;
    public static int ADAPTIVE_THRESH_WIN_SIZE_STEP;
    public static int ADAPTIVE_THRESH_WIN_SIZE;
    public static float ADAPTIVE_THRESH_CONSTANT;
    public static float MIN_MARKER_PERIMETER_RATE;
    public static float MAX_MARKER_PERIMETER_RATE;
    public static float POLYGONAL_APPROX_ACCURACY_RATE;
    public static float MIN_CORNER_DISTANCE;
    public static int MIN_DISTANCE_TO_BORDER;
    public static float MIN_MARKER_DISTANCE;
    public static float MIN_MARKER_DISTANCE_RATE;
    public static boolean DO_CORNER_REFINEMENT;
    public static int CORNER_REFINEMENT_WIN_SIZE;
    public static int CORNER_REFINEMENT_MAX_ITERATIONS;
    public static float CORNER_REFINEMENT_MIN_ACCURACY;
    public static int MARKER_BORDER_BITS;
    public static int  PERSPECTIVE_REMOVE_PIXEL_PER_CELL;
    public static float PERSEPCTIVE_REMOVE_IGNORE_MARGIN_PER_CELL;
    public static float MAX_ERRONEOUS_BITS_IN_BORDER_RATE;
    public static float MIN_OTSU_STD_DEV;
    public static float ERROR_CORRECTION_RATE;

    //ARUCO MARKER
    public static int ARUCO_MARKER_D;

    //ARUCO BOARD
    public static int ARUCO_BOARD_D;
    public static int ARUCO_BOARD_W;
    public static int ARUCO_BOARD_H;
    public static float ARUCO_BOARD_S;
    public static float ARUCO_BOARD_L;

    //CHARUCO BOARD
    public static int CHARUCO_BOARD_D;
    public static int CHARUCO_BOARD_W;
    public static int CHARUCO_BOARD_H;
    public static float CHARUCO_BOARD_SL;
    public static float CHARUCO_BOARD_ML;

    //CHARUCO CHARUCO DIAMOND
    public static int CHARUCO_DIAMOND_D;
    public static float CHARUCO_DIAMOND_SL;
    public static float CHARUCO_DIAMOND_ML;

    public Parameters(Context c){
        sharedpreferences = c.getSharedPreferences(CONSTANTS.Params, c.MODE_PRIVATE);
        editor = sharedpreferences.edit();
        sharedpreferences.edit().clear().commit();
        loadParameters();
    }

    public void loadParameters(){
        //loads parameters if they exist, or adds default parameters
        NMARKERS = sharedpreferences.getInt(CONSTANTS.PREF_NMARKERS, DEFAULT_PARAMS.DEFAULT_NMARKERS);
        ADAPTIVE_THRESH_WIN_SIZE_MIN=sharedpreferences.getInt(CONSTANTS.PREF_ADAPTIVE_THRESH_WIN_SIZE_MIN, DEFAULT_PARAMS.DEFAULT_ADAPTIVE_THRESH_WIN_SIZE_MIN);
        ADAPTIVE_THRESH_WIN_SIZE_MAX=sharedpreferences.getInt(CONSTANTS.PREF_ADAPTIVE_THRESH_WIN_SIZE_MAX,DEFAULT_PARAMS.DEFAULT_ADAPTIVE_THRESH_WIN_SIZE_MAX);
        ADAPTIVE_THRESH_WIN_SIZE_STEP=sharedpreferences.getInt(CONSTANTS.PREF_ADAPTIVE_THRESH_WIN_SIZE_STEP,DEFAULT_PARAMS.DEFAULT_ADAPTIVE_THRESH_WIN_SIZE_STEP);
        ADAPTIVE_THRESH_WIN_SIZE=sharedpreferences.getInt(CONSTANTS.PREF_ADAPTIVE_THRESH_WIN_SIZE,DEFAULT_PARAMS.DEFAULT_ADAPTIVE_THRESH_WIN_SIZE);
        ADAPTIVE_THRESH_CONSTANT=sharedpreferences.getFloat(CONSTANTS.PREF_ADAPTIVE_THRESH_CONSTANT,DEFAULT_PARAMS.DEFAULT_ADAPTIVE_THRESH_CONSTANT);
        System.out.println("LOK:"+ADAPTIVE_THRESH_CONSTANT);
        MIN_MARKER_PERIMETER_RATE=sharedpreferences.getFloat(CONSTANTS.PREF_MIN_MARKER_PERIMETER_RATE,DEFAULT_PARAMS.DEFAULT_MIN_MARKER_PERIMETER_RATE);
        MAX_MARKER_PERIMETER_RATE=sharedpreferences.getFloat(CONSTANTS.PREF_MAX_MARKER_PERIMETER_RATE,DEFAULT_PARAMS.DEFAULT_MAX_MARKER_PERIMETER_RATE);
        POLYGONAL_APPROX_ACCURACY_RATE=sharedpreferences.getFloat(CONSTANTS.PREF_POLYGONAL_APPROX_ACCURACY_RATE,DEFAULT_PARAMS.DEFAULT_POLYGONAL_APPROX_ACCURACY_RATE);
        MIN_CORNER_DISTANCE=sharedpreferences.getFloat(CONSTANTS.PREF_MIN_CORNER_DISTANCE,DEFAULT_PARAMS.DEFAULT_MIN_CORNER_DISTANCE);
        MIN_DISTANCE_TO_BORDER=sharedpreferences.getInt(CONSTANTS.PREF_MIN_DISTANCE_TO_BORDER,DEFAULT_PARAMS.DEFAULT_MIN_DISTANCE_TO_BORDER);
        MIN_MARKER_DISTANCE=sharedpreferences.getFloat(CONSTANTS.PREF_MIN_MARKER_DISTANCE,DEFAULT_PARAMS.DEFAULT_MIN_MARKER_DISTANCE);
        MIN_MARKER_DISTANCE_RATE=sharedpreferences.getFloat(CONSTANTS.PREF_MIN_MARKER_DISTANCE_RATE,DEFAULT_PARAMS.DEFAULT_MIN_MARKER_DISTANCE_RATE);
        DO_CORNER_REFINEMENT=sharedpreferences.getBoolean(CONSTANTS.PREF_DO_CORNER_REFINEMENT,DEFAULT_PARAMS.DEFAULT_DO_CORNER_REFINEMENT);
        CORNER_REFINEMENT_WIN_SIZE=sharedpreferences.getInt(CONSTANTS.PREF_CORNER_REFINEMENT_WIN_SIZE,DEFAULT_PARAMS.DEFAULT_CORNER_REFINEMENT_WIN_SIZE);
        CORNER_REFINEMENT_MAX_ITERATIONS=sharedpreferences.getInt(CONSTANTS.PREF_CORNER_REFINEMENT_MAX_ITERATIONS,DEFAULT_PARAMS.DEFAULT_CORNER_REFINEMENT_MAX_ITERATIONS);
        CORNER_REFINEMENT_MIN_ACCURACY=sharedpreferences.getFloat(CONSTANTS.PREF_CORNER_REFINEMENT_MIN_ACCURACY,DEFAULT_PARAMS.DEFAULT_CORNER_REFINEMENT_MIN_ACCURACY);
        MARKER_BORDER_BITS=sharedpreferences.getInt(CONSTANTS.PREF_MARKER_BORDER_BITS,DEFAULT_PARAMS.DEFAULT_MARKER_BORDER_BITS);
        PERSPECTIVE_REMOVE_PIXEL_PER_CELL=sharedpreferences.getInt(CONSTANTS.PREF_PERSPECTIVE_REMOVE_PIXEL_PER_CELL,DEFAULT_PARAMS.DEFAULT_PERSPECTIVE_REMOVE_PIXEL_PER_CELL);
        PERSEPCTIVE_REMOVE_IGNORE_MARGIN_PER_CELL=sharedpreferences.getFloat(CONSTANTS.PREF_PERSPECTIVE_REMOVE_IGNORE_MARGIN_PER_CELL,DEFAULT_PARAMS.DEFAULT_PERSEPCTIVE_REMOVE_IGNORE_MARGIN_PER_CELL);
        MAX_ERRONEOUS_BITS_IN_BORDER_RATE=sharedpreferences.getFloat(CONSTANTS.PREF_MAX_ERRONEOUS_BITS_IN_BORDER_RATE,DEFAULT_PARAMS.DEFAULT_MAX_ERRONEOUS_BITS_IN_BORDER_RATE);
        MIN_OTSU_STD_DEV=sharedpreferences.getFloat(CONSTANTS.PREF_MIN_OTSU_STD_DEV,DEFAULT_PARAMS.DEFAULT_MIN_OTSU_STD_DEV);
        ERROR_CORRECTION_RATE=sharedpreferences.getFloat(CONSTANTS.PREF_ERROR_CORRECTION_RATE,DEFAULT_PARAMS.DEFAULT_ERROR_CORRECTION_RATE);

        //ARUCO MARKER
        ARUCO_MARKER_D=sharedpreferences.getInt(CONSTANTS.PREF_ARUCO_MARKER_D,DEFAULT_PARAMS.DEFAULT_ARUCO_MARKER_D);

        //ARUCO BOARD
        ARUCO_BOARD_D=sharedpreferences.getInt(CONSTANTS.PREF_ARUCO_BOARD_D,DEFAULT_PARAMS.DEFAULT_ARUCO_BOARD_D);
        ARUCO_BOARD_W=sharedpreferences.getInt(CONSTANTS.PREF_ARUCO_BOARD_W,DEFAULT_PARAMS.DEFAULT_ARUCO_BOARD_W);
        ARUCO_BOARD_H=sharedpreferences.getInt(CONSTANTS.PREF_ARUCO_BOARD_H,DEFAULT_PARAMS.DEFAULT_ARUCO_BOARD_H);
        ARUCO_BOARD_S=sharedpreferences.getFloat(CONSTANTS.PREF_ARUCO_BOARD_S,DEFAULT_PARAMS.DEFAULT_ARUCO_BOARD_S);
        ARUCO_BOARD_L=sharedpreferences.getFloat(CONSTANTS.PREF_ARUCO_BOARD_L,DEFAULT_PARAMS.DEFAULT_ARUCO_BOARD_L);

        //CHARUCO BOARD
        CHARUCO_BOARD_D=sharedpreferences.getInt(CONSTANTS.PREF_CHARUCO_BOARD_D,DEFAULT_PARAMS.DEFAULT_CHARUCO_BOARD_D);
        CHARUCO_BOARD_W=sharedpreferences.getInt(CONSTANTS.PREF_CHARUCO_BOARD_W,DEFAULT_PARAMS.DEFAULT_CHARUCO_BOARD_W);
        CHARUCO_BOARD_H=sharedpreferences.getInt(CONSTANTS.PREF_CHARUCO_BOARD_H,DEFAULT_PARAMS.DEFAULT_CHARUCO_BOARD_H);
        CHARUCO_BOARD_SL=sharedpreferences.getFloat(CONSTANTS.PREF_CHARUCO_BOARD_SL,DEFAULT_PARAMS.DEFAULT_CHARUCO_BOARD_SL);
        CHARUCO_BOARD_ML=sharedpreferences.getFloat(CONSTANTS.PREF_CHARUCO_BOARD_ML,DEFAULT_PARAMS.DEFAULT_CHARUCO_BOARD_ML);

        //CHARUCO CHARUCO DIAMOND
        CHARUCO_DIAMOND_D=sharedpreferences.getInt(CONSTANTS.PREF_CHARUCO_DIAMOND_D,DEFAULT_PARAMS.DEFAULT_CHARUCO_DIAMOND_D);
        CHARUCO_DIAMOND_SL=sharedpreferences.getFloat(CONSTANTS.PREF_CHARUCO_DIAMOND_SL,DEFAULT_PARAMS.DEFAULT_CHARUCO_DIAMOND_SL);
        CHARUCO_DIAMOND_ML=sharedpreferences.getFloat(CONSTANTS.PREF_CHARUCO_DIAMOND_ML,DEFAULT_PARAMS.DEFAULT_CHARUCO_DIAMOND_ML);
    }

    public void resetParameters(){
        editor.clear();
        //loads parameters if they exist, or adds default parameters
        editor.putInt(CONSTANTS.PREF_NMARKERS, DEFAULT_PARAMS.DEFAULT_NMARKERS);
        editor.putInt(CONSTANTS.PREF_ADAPTIVE_THRESH_WIN_SIZE_MIN, DEFAULT_PARAMS.DEFAULT_ADAPTIVE_THRESH_WIN_SIZE_MIN);
        editor.putInt(CONSTANTS.PREF_ADAPTIVE_THRESH_WIN_SIZE_MAX,DEFAULT_PARAMS.DEFAULT_ADAPTIVE_THRESH_WIN_SIZE_MAX);
        editor.putInt(CONSTANTS.PREF_ADAPTIVE_THRESH_WIN_SIZE_STEP,DEFAULT_PARAMS.DEFAULT_ADAPTIVE_THRESH_WIN_SIZE_STEP);
        editor.putInt(CONSTANTS.PREF_ADAPTIVE_THRESH_WIN_SIZE,DEFAULT_PARAMS.DEFAULT_ADAPTIVE_THRESH_WIN_SIZE);
        editor.putFloat(CONSTANTS.PREF_ADAPTIVE_THRESH_CONSTANT,DEFAULT_PARAMS.DEFAULT_ADAPTIVE_THRESH_CONSTANT);
        editor.putFloat(CONSTANTS.PREF_MIN_MARKER_PERIMETER_RATE,DEFAULT_PARAMS.DEFAULT_MIN_MARKER_PERIMETER_RATE);
        editor.putFloat(CONSTANTS.PREF_MAX_MARKER_PERIMETER_RATE,DEFAULT_PARAMS.DEFAULT_MAX_MARKER_PERIMETER_RATE);
        editor.putFloat(CONSTANTS.PREF_POLYGONAL_APPROX_ACCURACY_RATE,DEFAULT_PARAMS.DEFAULT_POLYGONAL_APPROX_ACCURACY_RATE);
        editor.putFloat(CONSTANTS.PREF_MIN_CORNER_DISTANCE,DEFAULT_PARAMS.DEFAULT_MIN_CORNER_DISTANCE);
        editor.putInt(CONSTANTS.PREF_MIN_DISTANCE_TO_BORDER,DEFAULT_PARAMS.DEFAULT_MIN_DISTANCE_TO_BORDER);
        editor.putFloat(CONSTANTS.PREF_MIN_MARKER_DISTANCE,DEFAULT_PARAMS.DEFAULT_MIN_MARKER_DISTANCE);
        editor.putFloat(CONSTANTS.PREF_MIN_MARKER_DISTANCE_RATE,DEFAULT_PARAMS.DEFAULT_MIN_MARKER_DISTANCE_RATE);
        editor.putBoolean(CONSTANTS.PREF_DO_CORNER_REFINEMENT,DEFAULT_PARAMS.DEFAULT_DO_CORNER_REFINEMENT);
        editor.putInt(CONSTANTS.PREF_CORNER_REFINEMENT_WIN_SIZE,DEFAULT_PARAMS.DEFAULT_CORNER_REFINEMENT_WIN_SIZE);
        editor.putInt(CONSTANTS.PREF_CORNER_REFINEMENT_MAX_ITERATIONS,DEFAULT_PARAMS.DEFAULT_CORNER_REFINEMENT_MAX_ITERATIONS);
        editor.putFloat(CONSTANTS.PREF_CORNER_REFINEMENT_MIN_ACCURACY,DEFAULT_PARAMS.DEFAULT_CORNER_REFINEMENT_MIN_ACCURACY);
        editor.putInt(CONSTANTS.PREF_MARKER_BORDER_BITS,DEFAULT_PARAMS.DEFAULT_MARKER_BORDER_BITS);
        editor.putInt(CONSTANTS.PREF_PERSPECTIVE_REMOVE_PIXEL_PER_CELL,DEFAULT_PARAMS.DEFAULT_PERSPECTIVE_REMOVE_PIXEL_PER_CELL);
        editor.putFloat(CONSTANTS.PREF_PERSPECTIVE_REMOVE_IGNORE_MARGIN_PER_CELL,DEFAULT_PARAMS.DEFAULT_PERSEPCTIVE_REMOVE_IGNORE_MARGIN_PER_CELL);
        editor.putFloat(CONSTANTS.PREF_MAX_ERRONEOUS_BITS_IN_BORDER_RATE,DEFAULT_PARAMS.DEFAULT_MAX_ERRONEOUS_BITS_IN_BORDER_RATE);
        editor.putFloat(CONSTANTS.PREF_MIN_OTSU_STD_DEV,DEFAULT_PARAMS.DEFAULT_MIN_OTSU_STD_DEV);
        editor.putFloat(CONSTANTS.PREF_ERROR_CORRECTION_RATE,DEFAULT_PARAMS.DEFAULT_ERROR_CORRECTION_RATE);

        //ARUCO MARKER
        editor.putInt(CONSTANTS.PREF_ARUCO_MARKER_D,DEFAULT_PARAMS.DEFAULT_ARUCO_MARKER_D);

        //ARUCO BOARD
        editor.putInt(CONSTANTS.PREF_ARUCO_BOARD_D,DEFAULT_PARAMS.DEFAULT_ARUCO_BOARD_D);
        editor.putInt(CONSTANTS.PREF_ARUCO_BOARD_W,DEFAULT_PARAMS.DEFAULT_ARUCO_BOARD_W);
        editor.putInt(CONSTANTS.PREF_ARUCO_BOARD_H,DEFAULT_PARAMS.DEFAULT_ARUCO_BOARD_H);
        editor.putFloat(CONSTANTS.PREF_ARUCO_BOARD_S,DEFAULT_PARAMS.DEFAULT_ARUCO_BOARD_S);
        editor.putFloat(CONSTANTS.PREF_ARUCO_BOARD_L,DEFAULT_PARAMS.DEFAULT_ARUCO_BOARD_L);

        //CHARUCO BOARD
        editor.putInt(CONSTANTS.PREF_CHARUCO_BOARD_D,DEFAULT_PARAMS.DEFAULT_CHARUCO_BOARD_D);
        editor.putInt(CONSTANTS.PREF_CHARUCO_BOARD_W,DEFAULT_PARAMS.DEFAULT_CHARUCO_BOARD_W);
        editor.putInt(CONSTANTS.PREF_CHARUCO_BOARD_H,DEFAULT_PARAMS.DEFAULT_CHARUCO_BOARD_H);
        editor.putFloat(CONSTANTS.PREF_CHARUCO_BOARD_SL,DEFAULT_PARAMS.DEFAULT_CHARUCO_BOARD_SL);
        editor.putFloat(CONSTANTS.PREF_CHARUCO_BOARD_ML,DEFAULT_PARAMS.DEFAULT_CHARUCO_BOARD_ML);

        //CHARUCO CHARUCO DIAMOND
        editor.putInt(CONSTANTS.PREF_CHARUCO_DIAMOND_D,DEFAULT_PARAMS.DEFAULT_CHARUCO_DIAMOND_D);
        editor.putFloat(CONSTANTS.PREF_CHARUCO_DIAMOND_SL,DEFAULT_PARAMS.DEFAULT_CHARUCO_DIAMOND_SL);
        editor.putFloat(CONSTANTS.PREF_CHARUCO_DIAMOND_ML,DEFAULT_PARAMS.DEFAULT_CHARUCO_DIAMOND_ML);

        editor.commit();
        loadParameters();
    }
}
